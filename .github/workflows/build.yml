# This workflow builds a xar archive, deploys it into exist and execute a simple smoke test.
# It also includes code for using semantic-release to upload packages as part of GitHub releases
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# For node free automated release see https://trstringer.com/github-actions-create-release-upload-artifacts/

name: exist-db CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.CI_BOT_PAT }}
    strategy:
       fail-fast: false
       matrix:
        # 7.0.0-SNAPSHOT and 6.2.1 created
         exist-version: [latest, release]
         java-version: [11, 21]
         exclude:
           - exist-version: release
             java-version: 21
           - exist-version: latest
             java-version: 11

    steps:
      # Checkout code
      - uses: actions/checkout@v4
      # Speed up apt-get installs
      - name: Disable man-db to make package install and removal faster
        run: |
          echo 'set man-db/auto-update false' | sudo debconf-communicate >/dev/null
          sudo dpkg-reconfigure man-db
      - name: Install Test Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils bats
      # sanity check
      # TODO(DP) Validate ?
      - name: Ensure all XML files are well-formed
        run: |
          xmllint --noout \
            $(find . -type f -name '*.xml')

      # Build
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
      - run: ant

      - name: authenticate gh cli
        run: gh auth status

      # - name: Debug list releases
      #   run: gh release list -R BetaMasaheft/DillmannData
      #   env:
      #     GH_TOKEN: ${{ secrets.CI_BOT_PAT }}

      - name: Add Expath Dependency
        working-directory: ./build/
        run: gh release download -R BetaMasaheft/DillmannData -p '*.xar' -O '001.xar'

      # Deploy Package in Container
      - name: Pull Base Image
        run: docker pull duncdrum/existdb:${{ matrix.exist-version }}

      - name: Create CI Container
        run: docker create  --name exist -p 8080:8080 --health-interval=1s --health-start-period=1s duncdrum/existdb:${{ matrix.exist-version }} 

      - name: Prep CI Container
        run: docker cp ./build/. exist:/exist/autodeploy/

      - name: Start Exist Container
        run: docker start exist && sleep 30

      # Test
      - name: Run test
        run: bats --tap test/*.bats

      # Lint commit messages
      # - name: lint commit message
      #   uses: wagoid/commitlint-github-action@v6
  